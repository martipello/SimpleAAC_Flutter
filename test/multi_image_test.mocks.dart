// Mocks generated by Mockito 5.4.0 from annotations
// in simple_aac/test/multi_image_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i7;

import 'package:file/file.dart' as _i4;
import 'package:flutter_cache_manager/flutter_cache_manager.dart' as _i5;
import 'package:flutter_cache_manager/src/cache_store.dart' as _i2;
import 'package:flutter_cache_manager/src/web/web_helper.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCacheStore_0 extends _i1.SmartFake implements _i2.CacheStore {
  _FakeCacheStore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebHelper_1 extends _i1.SmartFake implements _i3.WebHelper {
  _FakeWebHelper_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_2 extends _i1.SmartFake implements _i4.File {
  _FakeFile_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileInfo_3 extends _i1.SmartFake implements _i5.FileInfo {
  _FakeFileInfo_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DefaultCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockDefaultCacheManager extends _i1.Mock
    implements _i5.DefaultCacheManager {
  @override
  _i2.CacheStore get store => (super.noSuchMethod(
        Invocation.getter(#store),
        returnValue: _FakeCacheStore_0(
          this,
          Invocation.getter(#store),
        ),
        returnValueForMissingStub: _FakeCacheStore_0(
          this,
          Invocation.getter(#store),
        ),
      ) as _i2.CacheStore);
  @override
  _i3.WebHelper get webHelper => (super.noSuchMethod(
        Invocation.getter(#webHelper),
        returnValue: _FakeWebHelper_1(
          this,
          Invocation.getter(#webHelper),
        ),
        returnValueForMissingStub: _FakeWebHelper_1(
          this,
          Invocation.getter(#webHelper),
        ),
      ) as _i3.WebHelper);
  @override
  _i6.Future<_i4.File> getSingleFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i4.File>);
  @override
  _i6.Stream<_i5.FileInfo> getFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i6.Stream<_i5.FileInfo>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.FileInfo>.empty(),
      ) as _i6.Stream<_i5.FileInfo>);
  @override
  _i6.Stream<_i5.FileResponse> getFileStream(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileStream,
          [url],
          {
            #key: key,
            #headers: headers,
            #withProgress: withProgress,
          },
        ),
        returnValue: _i6.Stream<_i5.FileResponse>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.FileResponse>.empty(),
      ) as _i6.Stream<_i5.FileResponse>);
  @override
  _i6.Future<_i5.FileInfo> downloadFile(
    String? url, {
    String? key,
    Map<String, String>? authHeaders,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [url],
          {
            #key: key,
            #authHeaders: authHeaders,
            #force: force,
          },
        ),
        returnValue: _i6.Future<_i5.FileInfo>.value(_FakeFileInfo_3(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.FileInfo>.value(_FakeFileInfo_3(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
      ) as _i6.Future<_i5.FileInfo>);
  @override
  _i6.Future<_i5.FileInfo?> getFileFromCache(
    String? key, {
    bool? ignoreMemCache = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromCache,
          [key],
          {#ignoreMemCache: ignoreMemCache},
        ),
        returnValue: _i6.Future<_i5.FileInfo?>.value(),
        returnValueForMissingStub: _i6.Future<_i5.FileInfo?>.value(),
      ) as _i6.Future<_i5.FileInfo?>);
  @override
  _i6.Future<_i5.FileInfo?> getFileFromMemory(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromMemory,
          [key],
        ),
        returnValue: _i6.Future<_i5.FileInfo?>.value(),
        returnValueForMissingStub: _i6.Future<_i5.FileInfo?>.value(),
      ) as _i6.Future<_i5.FileInfo?>);
  @override
  _i6.Future<_i4.File> putFile(
    String? url,
    _i7.Uint8List? fileBytes, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            url,
            fileBytes,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i6.Future<_i4.File>);
  @override
  _i6.Future<_i4.File> putFileStream(
    String? url,
    _i6.Stream<List<int>>? source, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFileStream,
          [
            url,
            source,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i4.File>.value(_FakeFile_2(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i6.Future<_i4.File>);
  @override
  _i6.Future<void> removeFile(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeFile,
          [key],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> emptyCache() => (super.noSuchMethod(
        Invocation.method(
          #emptyCache,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Stream<_i5.FileResponse> getImageFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress = false,
    int? maxHeight,
    int? maxWidth,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImageFile,
          [url],
          {
            #key: key,
            #headers: headers,
            #withProgress: withProgress,
            #maxHeight: maxHeight,
            #maxWidth: maxWidth,
          },
        ),
        returnValue: _i6.Stream<_i5.FileResponse>.empty(),
        returnValueForMissingStub: _i6.Stream<_i5.FileResponse>.empty(),
      ) as _i6.Stream<_i5.FileResponse>);
}
